* c.thi.ng

** Overview

WIP

*** Data structures
- Adjacency matrix (undirected graph)
- Cons list (with & without reference counting)
- Hashset
- Hashtable
- Octree
- Quadtree
- Spatial grid (1D, 2D, 3D)

*** Memory management

- Memory pool (auto-growth, manual compacts)
- Reference counting utils

*** Math

- Murmur Hash (32bit version)
- Poisson disc sampling

*** Geometry

- Vec2/3/4 (w/ opt SSE impls)
- Vector swizzling
- Line clipping

TBD

** Requirements

- [[https://premake.github.io/][Premake5]]
- [[http://www.gnu.org/software/make/][GNU Make]]
- GCC / Clang
- [[https://github.com/emcrisostomo/fswatch][fswatch]] (only needed for =./autotest= runner)
- [[http://emscripten.org][emscripten]] & [[http://nodejs.org][node]] (only needed for asm.js x-compilation via =./compile=)
- [[http://cscope.sourceforge.net/][cscope]] (only needed for =./browse=)

** Build & test

Get further help for autogenerated =Makefile=:

#+BEGIN_SRC shell
  # generate Makefiles
  premake5 gmake

  make help
  # Usage: make [config=name] [target]
  #
  # CONFIGURATIONS:
  #   debug_sse
  #   debug_no_sse
  #   release_sse
  #   release_no_sse
  #   test_sse
  #   test_no_sse
  #
  # TARGETS:
  #    all (default)
  #    clean
  #    test
  #    lib
  #    ex-poisson
#+END_SRC

#+BEGIN_SRC shell
# build & run tests manually
make config=debug_sse test && bin/debug/test
# or
make config=release_sse test && bin/release/test

# ...or use auto test w/ file watcher
# tests re-run automatically if files in /src or /test are changed
./autotest
#+END_SRC

** Build static library

#+BEGIN_SRC shell
make config=debug_sse lib
# or
make config=release_sse lib
#+END_SRC

** Build source x-ref

#+BEGIN_SRC shell
brew install cscope

./browse
#+END_SRC

** Disassemble & list symbols

#+BEGIN_SRC shell
# display disassembly (OSX)
otool -jtV bin/release/libcthing.a | less

# display global symbols defined in lib
nm -g -j bin/release/libcthing.a | grep --color=never _ct_
#+END_SRC

** Examples
*** Poisson disc sampling image conversion

[[./assets/iris-poisson.png]]

#+BEGIN_SRC shell
  # build library & example app
  make config=release_sse ex-poisson

  # show usage
  bin/release/ex-poisson
  # Missing input file
  # Usage:  ex-poisson [options] image [ > out.svg ]
  #   -b HEX    bg color (default: ffffff)
  #   -f HEX    fg color (default: 0000ff)
  #   -g FLOAT  gamma (default: 3.00)
  #   -i        invert (also swaps fg/bg) (default: no)
  #   -m FLOAT  min distance (default: 2.00)
  #   -x FLOAT  max distance (default: 10.00)
  #   -r FLOAT  dot radius (default: 1.00)
  #   -q INT    quality (default: 100)

  # concrete example (for image size roughly 700x1000px)
  bin/release/ex-poisson -g 1.25 -q 500 -m 1.5 -x 16 assets/iris.jpg > assets/iris.svg
#+END_SRC

*** Diffusion-Limited Aggregation

[[./assets/dla.png]]

#+BEGIN_SRC shell
# build library & example app
make config=release_sse ex-poisson && bin/release/ex-dla > assets/dla.svg
#+END_SRC

** Compile with emscripten

#+BEGIN_SRC shell
# help / usage
./compile -h

# compile with tests, closure pass & remove duplicate fns
./compile -tdc

python3 -m http.server

# in browser dev console - http://localhost:8000/
# geom(); geom._main()
#+END_SRC

** Build customization

The following =defines= can be used to customize behavior:

| =CT_FEATURE_LOG=       | enable logging (if =NDEBUG= is defined, the debug log level is disabled) |
| =CT_FEATURE_ANSI=      | use ANSI colors in log messages                                          |
| =CT_FEATURE_CHECKS=    | enable runtime assertions (via =CT_CHECK= macro)                         |
| =CT_FEATURE_CHECK_MEM= | enable runtime memory checks (via =CT_CHECK_MEM= macro)                  |
| =CT_FEATURE_SSE=       | enable SSE version                                                       |

** Contributors

| *Name*          | *Role*                          | *Website* |
| [[mailto:k@thi.ng][Karsten Schmidt]] | initiator & principal developer | [[http://thi.ng][thi.ng]]    |

** License

This project is open source and licensed under the [[http://www.apache.org/licenses/LICENSE-2.0][Apache Software License 2.0]].
